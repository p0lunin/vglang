enum Either<T, U>
    Left T
    Right U


foo<T, U>: T -> U -> (Either # T # U)
foo x y = Either.Left # x

bar: Int -> (Either # Int # Int)
bar x = foo # x # 1

enum List<T>
    Nil
    Cons (T) (List T)

foo<T>: T -> (List # T)
foo t = List.Cons # t # (List.Cons # t # List.Nil)